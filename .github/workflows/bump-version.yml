on:
  pull_request:
    branches:
      - master
    type:
      - edited
      - synchronize

#on:
#  push:
#    branches:
#      - master
name: Bump Version

# Avoid race conditions with tags release
concurrency: nodejs-coralogix-sdk

jobs:
  # CI is performed by ArgoCD
  push-tag:
    name: Push new tag
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate-token
        uses: tibdex/github-app-token@v1
        with:
          github_api_url: https://api.github.com
          app_id: ${{ secrets.AUTOMATION_APP_ID }}
          private_key: ${{ secrets.AUTOMATION_PRIVATE_KEY }}
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          # Required so the tags can be detected
          fetch-depth: 0
          github_token: ${{ steps.generate-token.outputs.token }}
      - name: Configure committer
        run: |
          git config --local user.email "121110262+coralogix-automation[bot]@users.noreply.github.com"
          git config --local user.name "coralogix-automation[bot]"
          git remote set-url origin https://coralogix-automation:${{ steps.generate-token.outputs.token }}@github.com/coralogix/nodejs-coralogix-sdk
      - name: Bump version
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          npm install -g standard-version
          git checkout -b chore/${{ github.run_number }}
          standard-version --skip.tag
          npm run update-version
          git add .
          git commit -m "Created SDK version file"
          git push --follow-tags origin chore/${{ github.run_number }}
          gh pr create --base master --head chore/${{ github.run_number }} --fill
          gh api -XPOST /repos/coralogix/nodejs-coralogix-sdk/statuses/$(git rev-parse HEAD) -f state=success -f context="ticket-id-validator"
          gh api -XPOST /repos/coralogix/nodejs-coralogix-sdk/statuses/$(git rev-parse HEAD) -f state=success -f context="test"
          gh api -XPOST /repos/coralogix/nodejs-coralogix-sdk/statuses/$(git rev-parse HEAD) -f state=success -f context="GitGuardian Security Checks"
          gh pr merge --delete-branch --admin --squash chore/${{ github.run_number }}
          git checkout master
          git pull
          git tag v$(npm pkg get version | sed 's/"//g')
          git push --tags
